# kube-prometheus-stack Configuration for Raspberry Pi Single-Node Cluster

defaultRules:
  rules:
    etcd: false

kubeEtcd:
  enabled: false

crds:
  enabled: true

# Prometheus optimization
prometheus:
  enabled: true
  service: # Changed from ClusterIP to LoadBalancer
    type: LoadBalancer
  prometheusSpec:
    annotations:
    argocd.argoproj.io/skip-health-check: "true"
    retention: 3d
    resources:
      requests:
        memory: 64Mi
        cpu: 100m
      limits:
        memory: 256Mi
        cpu: 200m
    storageSpec:
      volumeClaimTemplate:
        spec:
          resources:
            requests:
              storage: 5Gi # Conservative storage for homelab
    scrapeInterval: 30s
    evaluationInterval: 30s
    enableLifecycle: true
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    scrapeConfigSelectorNilUsesHelmValues: false

# Grafana optimization
grafana:
  enabled: true
  replicas: 1
  resources:
    requests:
      memory: 64Mi
      cpu: 50m
    limits:
      memory: 128Mi
      cpu: 100m
  service: # Changed from ClusterIP to LoadBalancer
    type: LoadBalancer
  admin: # Changed from adminUser/adminPassword to existingSecret
    existingSecret: "grafana-secret"
    userKey: "admin-user"
    passwordKey: "admin-password"

# AlertManager optimization
alertmanager:
  enabled: true
  service: # Changed from ClusterIP to LoadBalancer
    type: LoadBalancer
  alertmanagerSpec:
    resources:
      requests:
        memory: 32Mi
        cpu: 25m
      limits:
        memory: 64Mi
        cpu: 50m
