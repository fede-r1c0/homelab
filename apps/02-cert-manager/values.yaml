# cert-manager Configuration for Raspberry Pi Single-Node Cluster
# Optimized for home lab environment

# Global configuration
global:
  leaderElection:
    namespace: cert-manager

# Install CRDs
installCRDs: true

# Controller configuration
replicaCount: 1

resources:
  requests:
    memory: 128Mi
    cpu: 100m
  limits:
    memory: 256Mi
    cpu: 200m

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 1001
  fsGroup: 1001

# Pod disruption budget (disabled for single node)
podDisruptionBudget:
  enabled: false

# Network policy (disabled for simplicity)
networkPolicy:
  enabled: false

# Webhook configuration
webhook:
  replicaCount: 1
  timeoutSeconds: 30
  resources:
    requests:
      memory: 64Mi
      cpu: 50m
    limits:
      memory: 128Mi
      cpu: 100m
  securityContext:
    runAsNonRoot: true
    runAsUser: 1001
    runAsGroup: 1001
    fsGroup: 1001

# CA Injector configuration
cainjector:
  # Resource limits optimized for Raspberry Pi
  resources:
    requests:
      memory: 64Mi
      cpu: 50m
    limits:
      memory: 128Mi
      cpu: 100m

  # Security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 1001
    runAsGroup: 1001
    fsGroup: 1001

  # High availability (disabled for single node)
  replicaCount: 1

  # Pod disruption budget
  podDisruptionBudget:
    enabled: false

# RBAC configuration
rbac:
  create: true
  rules:
    - apiGroups: [""]
      resources: ["secrets", "events", "configmaps"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
    - apiGroups: ["cert-manager.io"]
      resources: ["*"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
    - apiGroups: ["admissionregistration.k8s.io"]
      resources:
        ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Service account configuration
serviceAccount:
  create: true
  name: "cert-manager"
  annotations: {}

# Pod annotations
podAnnotations: {}

# Pod labels
podLabels: {}

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Ingress configuration (disabled for single node)
ingress:
  enabled: false

# TLS configuration
tls:
  enabled: false

# Prometheus metrics
prometheus:
  enabled: true
  servicemonitor:
    enabled: false
  service:
    type: ClusterIP

# Startup API check
startupAPICheck:
  enabled: true
  timeout: 60s

# Feature gates
featureGates:
  # Enable additional features
  AdditionalCertificateOutputFormats: true
  CertificateSigningRequestControllers: true
  Gateway: false
  ExperimentalGatewayAPISupport: false
