# OPA Gatekeeper Configuration for Raspberry Pi Single-Node Cluster
# Optimized for home lab environment

# Controller configuration
controller:
  # Resource limits optimized for Raspberry Pi
  resources:
    requests:
      memory: 128Mi
      cpu: 100m
    limits:
      memory: 256Mi
      cpu: 200m

  # Security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 1001
    runAsGroup: 1001
    fsGroup: 1001

  # Service configuration
  service:
    type: ClusterIP

  # High availability (disabled for single node)
  replicaCount: 1

  # Pod disruption budget
  podDisruptionBudget:
    enabled: false

  # Pod security policy
  podSecurityPolicy:
    enabled: false

  # Network policy
  networkPolicy:
    enabled: false

  # Webhook configuration
  webhook:
    enabled: true
    timeoutSeconds: 30
    # Resource limits for webhook
    resources:
      requests:
        memory: 64Mi
        cpu: 50m
      limits:
        memory: 128Mi
        cpu: 100m

# Audit configuration
audit:
  # Resource limits optimized for Raspberry Pi
  resources:
    requests:
      memory: 64Mi
      cpu: 50m
    limits:
      memory: 128Mi
      cpu: 100m

  # Security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 1001
    runAsGroup: 1001
    fsGroup: 1001

  # High availability (disabled for single node)
  replicaCount: 1

  # Pod disruption budget
  podDisruptionBudget:
    enabled: false

# RBAC configuration
rbac:
  create: true
  rules:
    - apiGroups: [""]
      resources: ["secrets", "events", "configmaps"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
    - apiGroups: ["config.gatekeeper.sh"]
      resources: ["*"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
    - apiGroups: ["templates.gatekeeper.sh"]
      resources: ["*"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
    - apiGroups: ["admissionregistration.k8s.io"]
      resources:
        ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Service account configuration
serviceAccount:
  create: true
  name: "gatekeeper-admin"
  annotations: {}

# Pod annotations
podAnnotations: {}

# Pod labels
podLabels: {}

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Ingress configuration (disabled for single node)
ingress:
  enabled: false

# TLS configuration
tls:
  enabled: false

# Prometheus metrics
prometheus:
  enabled: true
  servicemonitor:
    enabled: false
  service:
    type: ClusterIP

# Startup API check
startupAPICheck:
  enabled: true
  timeout: 60s

# Feature gates
featureGates:
  # Enable additional features
  ExternalData: true
  Expand: true
  Generate: true
  MutatingAdmissionPolicy: false
