# Cloudflare Tunnel para K3s
# Chart oficial: https://artifacthub.io/packages/helm/community-charts/cloudflared

# -- This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replica:
  # -- This will use DaemonSet to deploy cloudflared to all nodes
  allNodes: true
  # -- If previous flag disabled, this will use Deployment to deploy cloudflared only number of following count
  count: 1

# -- This is for setting up the cloudflared tunnel secrets. For more information checkout: https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/do-more-with-tunnels/local-management/create-local-tunnel/
tunnelSecrets:
  # -- This is for setting up the existing secret for the cloudflared tunnel certificate PEM file. If not set, the base64EncodedPemFile will be used.
  existingPemFileSecret:
    name: "cloudflared-secret"
    key: "cert.pem"
  existingConfigJsonFileSecret:
    name: "cloudflared-secret"
    key: "credentials.json"

# -- Please find more configuration from https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/configuration/arguments/
tunnelConfig:
  # -- cloudflared tunnel name
  name: "k3s-homelab"
  # auto, http2, h2mux, quic
  protocol: quic
  # info, warn, error, fatal, panic
  logLevel: info

# Configuraci√≥n de ingreso
ingress:
  # ArgoCD
  - hostname: "argocd.feder1c0.tech"
    service: "http://argocd-server.argocd.svc.cluster.local:80"

  # Grafana
  - hostname: "grafana.feder1c0.tech"
    service: "http://prometheus-stack-grafana.monitoring.svc.cluster.local:80"

  # Backstage
  - hostname: "backstage.feder1c0.tech"
    service: "http://backstage.backstage.svc.cluster.local:7007"

  # Catch-all rule
  - service: "http_status:404"

  # Recursos para Raspberry Pi
resources:
  requests:
    memory: "64Mi"
    cpu: "50m"
  limits:
    memory: "128Mi"
    cpu: "100m"
